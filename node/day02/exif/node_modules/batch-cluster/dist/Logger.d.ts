export declare type Log = (message: string, ...optionalParams: any[]) => void;
/**
 * Simple interface for logging.
 */
export interface Logger {
    trace: Log;
    debug: Log;
    info: Log;
    warn: Log;
    error: Log;
}
export declare const LogLevels: (keyof Logger)[];
/**
 * Default `Logger` implementation.  `debug` and `info` go to
 * util.debuglog("batch-cluster")`. `warn` and `error` go to `console.warn` and
 * `console.error`.
 */
export declare const ConsoleLogger: Logger;
/**
 * `Logger` that disables all logging.
 */
export declare const NoLogger: Logger;
export declare function setLogger(l: Logger): void;
export declare function logger(): Logger;
export declare namespace Logger {
    function withLevels(delegate: Logger): Logger;
    function withTimestamps(delegate: Logger): Logger;
    function filterLevels(l: Logger, minLogLevel: keyof Logger): Logger;
}
