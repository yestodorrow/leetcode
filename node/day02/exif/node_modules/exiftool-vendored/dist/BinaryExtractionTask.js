"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _path = __importStar(require("path"));
var ExifToolTask_1 = require("./ExifToolTask");
var String_1 = require("./String");
var BinaryExtractionTask = /** @class */ (function (_super) {
    __extends(BinaryExtractionTask, _super);
    function BinaryExtractionTask(args) {
        return _super.call(this, args) || this;
    }
    BinaryExtractionTask.for = function (tagname, imgSrc, imgDest) {
        var args = [
            "-b",
            "-" + tagname,
            _path.resolve(imgSrc),
            "-w",
            // The %0f prevents shell escaping. See
            // https://sno.phy.queensu.ca/~phil/exiftool/exiftool_pod.html#w-EXT-or-FMT--textOut
            "%0f" + _path.resolve(imgDest)
        ];
        return new BinaryExtractionTask(args);
    };
    BinaryExtractionTask.prototype.parse = function (stdout, err) {
        if (err != null)
            throw err;
        if (null == /1 output files? created/.exec(stdout)) {
            throw new Error(String_1.notBlank(stdout) ? stdout : "Missing expected status message");
        }
    };
    return BinaryExtractionTask;
}(ExifToolTask_1.ExifToolTask));
exports.BinaryExtractionTask = BinaryExtractionTask;
//# sourceMappingURL=BinaryExtractionTask.js.map