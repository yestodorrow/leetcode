"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var batch_cluster_1 = require("batch-cluster");
var _path = __importStar(require("path"));
var ExifToolTask_1 = require("./ExifToolTask");
var Maybe_1 = require("./Maybe");
var ReadRawTask = /** @class */ (function (_super) {
    __extends(ReadRawTask, _super);
    function ReadRawTask(sourceFile, args) {
        var _this = _super.call(this, args) || this;
        _this.sourceFile = sourceFile;
        _this.args = args;
        return _this;
    }
    ReadRawTask.for = function (filename, exiftoolArgs) {
        if (exiftoolArgs === void 0) { exiftoolArgs = []; }
        var args = __spread(exiftoolArgs);
        if (!args.includes("-json"))
            args.unshift("-json");
        var sourceFile = _path.resolve(filename);
        args.push(sourceFile);
        return new ReadRawTask(sourceFile, args);
    };
    ReadRawTask.prototype.toString = function () {
        return "ReadRawTask" + this.sourceFile + ")";
    };
    ReadRawTask.prototype.parse = function (data, err) {
        try {
            return JSON.parse(data)[0];
        }
        catch (jsonError) {
            batch_cluster_1.logger().error("ExifTool.ReadRawTask(): Invalid JSON", { data: data });
            throw Maybe_1.orElse(err, jsonError);
        }
    };
    return ReadRawTask;
}(ExifToolTask_1.ExifToolTask));
exports.ReadRawTask = ReadRawTask;
//# sourceMappingURL=ReadRawTask.js.map